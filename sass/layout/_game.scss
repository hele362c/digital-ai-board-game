@use "../base/variables";

html {
  height: 100%;
}

.game {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow-y: auto;
}

.cardList {
  width: 100%;
  height: 100%;
}

// loading animation

.blur {
  background-image: url("/public/staticAssets/game-background.png");
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  filter: blur(11px);
  -webkit-filter: blur(11px);
  height: 100vh;
  width: 100%;
  margin: 0;
  z-index: -1000;
  overflow: hidden;
}

.countdown {
  position: relative;
  width: 400px;
  height: 400px;
  transform-style: preserve-3d;
  perspective: 1000px;
  color: variables.$white;
  font-weight: bold;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 2;
  width: 80%;
  text-align: center;
  overflow: hidden;
}
.countdown:before {
  content: "";
  position: absolute;
  bottom: -50px;
  left: 0;
  width: 100%;
  height: 10px;
}

.countdown .number {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  transform: rotateY(270deg);
  animation: animate 10s linear;
}

.countdown .number:nth-child(1) {
  animation-delay: 0s;
}
.countdown .number:nth-child(2) {
  animation-delay: 1s;
}
.countdown .number:nth-child(3) {
  animation-delay: 2s;
}
.countdown .number:nth-child(4) {
  animation-delay: 3s;
}

.countdown .number h2 {
  margin: 0;
  padding: 0;
  font-size: 20em;
  color: variables.$white;
  align-items: center;
}

@keyframes animate {
  0% {
    transform: rotateY(90deg);
  }
  10%,
  100% {
    transform: rotateY(-90deg);
  }
}

// end of loading animation
// game

.game {
  background-color: variables.$dark-blue;
}
.game_board {
  background-color: variables.$dark-blue;
}
.cardList {
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  grid-auto-rows: 1fr;
}

.cardList::before {
  content: "";
  grid-row: 2/7;
  grid-column: 2/8;
}
.card {
  padding: 0 !important;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: #c5ecdf;
  border: solid 6px #15b57e;
  position: relative;
}

.logo-white {
  position: absolute;
  top: 45%;
  left: 21%;
}

.logo-white img {
  max-width: 50.625rem;
}

.finish-button,
a {
  position: absolute;
  top: 20%;
  left: 75%;
  color: variables.$white;
}

.finishButton {
  width: 9rem;
  cursor: pointer;
  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  }
  &:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
  }
}

.gamePawn {
  position: absolute;
  top: 2rem;
}

.icon {
  width: 4rem;
  height: auto;
}

.card_text {
  font-size: 1.1rem;
  font-weight: bold;
  color: variables.$dark-blue;
  padding: 0;
  margin: 0;
}

.card:nth-child(1),
.card:nth-child(5),
.card:nth-child(8),
.card:nth-child(13),
.card:nth-child(18),
.card:nth-child(23),
.card:nth-child(24) {
  background-color: #c2e3fe;
  border: solid 6px #31a3fc;
}
.card:nth-child(3),
.card:nth-child(6),
.card:nth-child(9),
.card:nth-child(10),
.card:nth-child(14),
.card:nth-child(15),
.card:nth-child(16),
.card:nth-child(20),
.card:nth-child(22),
.card:nth-child(25) {
  background-color: #ffcda9;
  border: solid 6px #ff822c;
}
.card:nth-child(26) {
  background-color: #ffdbed;
  border: solid 6px #ff6fbb;
}
.card:nth-child(26):nth-child(1) {
  color: pink;
}

.icon3 {
  position: absolute;
  top: 30%;
  left: 20%;
  width: 15rem;
}

.logo-white {
  position: absolute;
  top: 45%;
  left: 25%;
}
.rollme {
  position: absolute;
  top: 77%;
  left: 48.5%;
  color: variables.$white;
  font-size: 20px;
}

// timer
.time_container {
  float: right;
  margin-right: -3rem;
  margin-top: -1rem;
  font-size: 2rem;
  color: variables.$white;
}

// mute button
.mutedButton {
  height: 4.559rem;
  width: 2.6rem;
  cursor: pointer;
  background-size: 100%;
  position: absolute;
  top: 20%;
  left: 70%;

  &:hover {
    transform: translateY(-3px);
  }
  &:active {
    transform: translateY(-1px);
  }
}

.unmutedButton {
  height: 4.559rem;
  width: 2.6rem;
  cursor: pointer;
  background-size: 100%;
  position: absolute;
  top: 20%;
  left: 70%;

  &:hover {
    transform: translateY(-3px);
  }
  &:active {
    transform: translateY(-1px);
  }
}

//-------------------dice-------------------

#result {
  text-align: center;
  color: variables.$white;
  border-radius: 8px;
  padding: 5px;
  position: absolute;
  width: 50px;
  bottom: 30%;
  left: 60%;
  font-size: 3rem;
}

#ui_dado {
  margin: 0px auto;
  position: absolute;
  top: 50%;
  left: 30%;
  width: 40%;
  overflow: hidden;
  background-attachment: fixed;
  transition: opacity 0.4s;
  //transform: scale(.6,.6);
  text-align: center;
  #platform.playing > #dice {
    animation-duration: 1s;
  }
  #platform.playing {
    transform-style: preserve-3d;
    animation: roll 1s linear;
  }
  #platform.stop > #dice,
  #platform.stop {
    animation-play-state: paused;
  }

  #platform {
    margin-top: 100px;
    margin-bottom: 120px;
    margin-left: calc(50% - 50px);
    margin-right: calc(50% - 50px);
    height: 120px;
  }
  #dice {
    position: absolute;
    width: 100px;
    height: 100px;
    transform-style: preserve-3d;
    transform: rotateX(15deg) rotateY(10deg) rotateZ(-15deg);
  }

  #platform.playing > #dice {
    animation: spin 1.4s infinite linear;
  }
  .side {
    position: absolute;
    width: 100px;
    height: 100px;
    background: #fff;
    box-shadow: inset 0 0 40px #ccc;
    border-radius: 20px;
  }
  #dice .cover,
  #dice .inner {
    background: #e0e0e0;
    box-shadow: none;
  }
  #dice .cover {
    border-radius: 0;
  }
  #dice .cover.x {
    transform: rotateY(90deg);
  }
  #dice .cover.z {
    transform: rotateX(90deg);
  }
  #dice .front {
    transform: translateZ(50px);
  }
  #dice .front.inner {
    transform: translateZ(49px);
  }
  #dice .back {
    transform: rotateX(-180deg) translateZ(50px);
  }
  #dice .back.inner {
    transform: rotateX(-180deg) translateZ(49px);
  }
  #dice .right {
    transform: rotateY(90deg) translateZ(50px);
  }
  #dice .right.inner {
    transform: rotateY(90deg) translateZ(49px);
  }
  #dice .left {
    transform: rotateY(-90deg) translateZ(50px);
  }
  #dice .left.inner {
    transform: rotateY(-90deg) translateZ(49px);
  }
  #dice .top {
    transform: rotateX(90deg) translateZ(50px);
  }
  #dice .top.inner {
    transform: rotateX(90deg) translateZ(49px);
  }
  #dice .bottom {
    transform: rotateX(-90deg) translateZ(50px);
  }
  #dice .bottom.inner {
    transform: rotateX(-90deg) translateZ(49px);
  }
  .dot {
    position: absolute;
    width: 23px;
    height: 23px;
    border-radius: 23px;
    background: #444;
    box-shadow: inset 5px 0 10px #000;
    &.center {
      margin: 38px 0 0 38px;
      &.dleft {
        margin: 38px 0 0 10px;
      }
      &.dright {
        margin: 38px 0 0 67px;
      }
    }
    &.dtop {
      margin-top: 10px;
    }
    &.dleft {
      margin-left: 67px;
    }
    &.dright {
      margin-left: 10px;
    }
    &.dbottom {
      margin-top: 67px;
    }
  }
}

@keyframes spin {
  0% {
    transform: translateZ(-100px) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
  }
  16% {
    transform: translateZ(-100px) rotateX(180deg) rotateY(180deg) rotateZ(0deg);
  }
  33% {
    transform: translateZ(-100px) rotateX(360deg) rotateY(90deg) rotateZ(180deg);
  }
  50% {
    transform: translateZ(-100px) rotateX(360deg) rotateY(360deg) rotateZ(360deg);
  }
  66% {
    transform: translateZ(-100px) rotateX(180deg) rotateY(360deg) rotateZ(270deg);
  }
  83% {
    transform: translateZ(-100px) rotateX(270deg) rotateY(180deg) rotateZ(180deg);
  }
  100% {
    transform: translateZ(-100px) rotateX(360deg) rotateY(360deg) rotateZ(360deg);
  }
}

@keyframes roll {
  0% {
    transform: translate3d(0px, 0px, 0px);
  }
  30% {
    transform: translate3d(150px, -20px, 0px);
  }
  50% {
    transform: translate3d(0px, -50px, 0px);
  }
  80% {
    transform: translate3d(-150px, -20px, 0px);
  }
  100% {
    transform: translate3d(0px, 0px, 0px);
  }
}

.hide {
  visibility: hidden;
  display: none;
}
.show {
  display: none;
}

@media screen and (max-width: 50rem) {
  .cardList {
    margin-top: 6rem;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-auto-rows: 1fr;
    align-items: center;
    margin-left: 0.4rem;
    height: 80%;
  }

  .cardList::before {
    content: none;
  }
  .card {
    width: 5.13rem;
    height: 5rem;
    padding: 0 !important;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .gamePawn {
    top: auto;
  }

  .logo-white img {
    width: 18rem;
  }
  .logo-white {
    left: 23%;
    top: 7%;
  }
  .icon3 {
    width: 5rem;
    left: 0;
    top: 0;
  }

  .card_text {
    font-size: 0.8rem;
  }

  .icon {
    margin-top: 0 !important;
    width: 2rem;
    height: auto;
  }
  .finish-button {
    left: 14%;
    top: 95%;
  }
  .unmutedButton {
    top: 93%;
    left: 0%;
  }
  .mutedButton {
    top: 93%;
    left: 0%;
  }
  #ui_dado {
    top: 72%;
    left: 50%;
    width: 50%;
  }
  .rollme {
    top: 100%;
    left: 67%;
  }
  #result {
    left: 80%;
  }
  .number {
    font-size: 0.7rem;
  }
  .time_container {
    margin-right: 0;
    margin-top: 0;
  }
  .finishButton {
    width: 5rem;
  }
  /* .icon {
    margin-left: 1rem;
  } */
  .mutedButton:hover {
    transform: none;
  }
  .mutedButton:active {
    transform: none;
  }
  .unmutedButton:hover {
    transform: none;
  }
  .unmutedButton:active {
    transform: none;
  }
  .finishButton {
    &:hover {
      transform: none;
    }
    &:active {
      transform: none;
      box-shadow: 0;
    }
  }
}
